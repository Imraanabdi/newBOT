{"ast":null,"code":"var _jsxFileName = \"/home/imran/Desktop/botwar/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport BotsPage from \"./BotsPage\";\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n\n  // Function to handle adding a bot to the army\n  const addToArmy = bot => {\n    if (!botArmy.some(armyBot => armyBot.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  };\n\n  // Function to handle removing a bot from the army\n  const removeFromArmy = botId => {\n    const updatedBotArmy = botArmy.filter(bot => bot.id !== botId);\n    setBotArmy(updatedBotArmy);\n  };\n  useEffect(() => {\n    fetch(\"https://bot-battlr-challenge-2.onrender.com/bots\").then(response => response.json()).then(data => setBots(data));\n  }, [botArmy]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(BotsPage, {\n        bots: bots,\n        botArmy: botArmy,\n        addToArmy: addToArmy,\n        removeFromArmy: removeFromArmy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/bot/:id\",\n      element: /*#__PURE__*/_jsxDEV(BotSpecs, {\n        addToArmy: addToArmy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"d+K5VIAavQRbiGkfY1a5I9Cs7oE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","BotsPage","BotSpecs","jsxDEV","_jsxDEV","App","_s","bots","setBots","botArmy","setBotArmy","addToArmy","bot","some","armyBot","id","removeFromArmy","botId","updatedBotArmy","filter","fetch","then","response","json","data","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/imran/Desktop/botwar/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport BotsPage from \"./BotsPage\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction App() {\n  const  [bots, setBots] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n\n  // Function to handle adding a bot to the army\n  const addToArmy = (bot) => {\n    if (!botArmy.some((armyBot) => armyBot.id === bot.id)) {\n      setBotArmy([...botArmy, bot]);\n    }\n  };\n\n  // Function to handle removing a bot from the army\n  const removeFromArmy = (botId) => {\n    const updatedBotArmy = botArmy.filter((bot) => bot.id !== botId);\n    setBotArmy(updatedBotArmy);\n  };\n\n  useEffect(() => {\n    fetch(\"https://bot-battlr-challenge-2.onrender.com/bots\")\n    .then(response => response.json())\n    .then(data => setBots(data));\n  },[botArmy]);\n\n  return (\n   \n      <Routes>\n        <Route path=\"/\" element={<BotsPage bots = {bots} botArmy={botArmy} addToArmy = {addToArmy} removeFromArmy={removeFromArmy}/>} />\n        <Route path=\"/bot/:id\" element={<BotSpecs addToArmy = {addToArmy} />} />\n      </Routes>\n  \n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAO,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMa,SAAS,GAAIC,GAAG,IAAK;IACzB,IAAI,CAACH,OAAO,CAACI,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,EAAE;MACrDL,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEG,GAAG,CAAC,CAAC;IAC/B;EACF,CAAC;;EAED;EACA,MAAMI,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,cAAc,GAAGT,OAAO,CAACU,MAAM,CAAEP,GAAG,IAAKA,GAAG,CAACG,EAAE,KAAKE,KAAK,CAAC;IAChEP,UAAU,CAACQ,cAAc,CAAC;EAC5B,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACduB,KAAK,CAAC,kDAAkD,CAAC,CACxDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIhB,OAAO,CAACgB,IAAI,CAAC,CAAC;EAC9B,CAAC,EAAC,CAACf,OAAO,CAAC,CAAC;EAEZ,oBAEIL,OAAA,CAACL,MAAM;IAAA0B,QAAA,gBACLrB,OAAA,CAACJ,KAAK;MAAC0B,IAAI,EAAC,GAAG;MAACC,OAAO,eAAEvB,OAAA,CAACH,QAAQ;QAACM,IAAI,EAAIA,IAAK;QAACE,OAAO,EAAEA,OAAQ;QAACE,SAAS,EAAIA,SAAU;QAACK,cAAc,EAAEA;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChI3B,OAAA,CAACJ,KAAK;MAAC0B,IAAI,EAAC,UAAU;MAACC,OAAO,eAAEvB,OAAA,CAACF,QAAQ;QAACS,SAAS,EAAIA;MAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAGf;AAACzB,EAAA,CA/BQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}